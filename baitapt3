{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3420b621-83b4-4fa1-9223-b956cb597bbf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 5 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7 5\n"
     ]
    }
   ],
   "source": [
    "a,b = map(int,input().split())\n",
    "a,b = b, a\n",
    "print (a,b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "867b95a7-9455-433b-a108-5d45dfb41c5b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6 4\n"
     ]
    }
   ],
   "source": [
    "# W3A2\n",
    "a=4\n",
    "b=6\n",
    "a= a^b\n",
    "b= a^b\n",
    "a=a^b\n",
    "print (a,b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5e2cb007-993a-4416-85bc-73f5013db3ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#W3A3\n",
    "a = 8\n",
    "a & (a-1)==0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7d7048fa-624b-4ce3-afd1-b8c7edf22e96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "nhập vào số a: 10\n",
      " nhập vào số b: 3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " kết quả là: 4\n"
     ]
    }
   ],
   "source": [
    "#a4\n",
    "import math\n",
    "a= float(input(\"nhập vào số a:\"))\n",
    "b= float(input(\" nhập vào số b:\"))\n",
    "kq= math.ceil(a / b)\n",
    "print(\" kết quả là:\",kq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1d67247a-f3e2-448e-b37f-00acd0330e92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "nhập vào số a: 10\n",
      "nhập vào số b: 3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " kết quả là: 3\n"
     ]
    }
   ],
   "source": [
    "#a5\n",
    "import math\n",
    "a= float(input(\"nhập vào số a:\"))\n",
    "b= float(input(\"nhập vào số b:\"))\n",
    "kq= math.floor(a / b)\n",
    "print (\" kết quả là:\",kq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "28992ea2-57cc-4b98-92fb-81021b33e66c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " số tự nhiên: 19\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Odd\n"
     ]
    }
   ],
   "source": [
    "#a6\n",
    "x=int(input(\" số tự nhiên:\"))\n",
    "if x%2==0:\n",
    "    print(\"Even\")\n",
    "else:\n",
    "    print(\"Odd\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "095c0147-3d70-4c54-ad23-27e42826c972",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "số nguyên a: -1\n",
      " số nguyên b: 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No\n"
     ]
    }
   ],
   "source": [
    "#a7\n",
    "a= int(input(\"số nguyên a:\"))\n",
    "b= int(input(\" số nguyên b:\"))\n",
    "if a<0 and b<0:\n",
    "    print (\"yes\")\n",
    "else:\n",
    "    print(\"No\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "59b096bc-9e67-4883-bba5-1ae8ca5e7f44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " nghiem nguyen\n",
      " hai anh\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "#a8\n",
    "text1=len(input())\n",
    "text2=len(input())\n",
    "if text1>text2:\n",
    "    print (\"True\")\n",
    "else:\n",
    "    print(\"False\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f210220c-608a-4dc6-bb99-4fcc9b4a3a30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 2\n",
      " 3\n",
      " 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yes\n"
     ]
    }
   ],
   "source": [
    "#a9\n",
    "a = int(input())\n",
    "b = int(input())\n",
    "c = int(input())\n",
    "if (a + b > c) and (a + c > b) and (b + c > a) and a > 0 and b > 0 and c > 0 :\n",
    "   print (\"yes\")\n",
    "else:\n",
    "    print(\"no\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "70ea6f38-8d71-4c77-968a-9862300644cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 2 4 6 9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    }
   ],
   "source": [
    "# A10\n",
    "a, b, c, d = map(int,input().split())\n",
    "print(max(a, b, c, d))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7a95525f-e011-41fe-ae83-5a7e80575d74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 5\n",
      " 5\n",
      " 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 cạnh tạo thành một tam giác cân\n"
     ]
    }
   ],
   "source": [
    "#a11\n",
    "a = int(input())\n",
    "b = int(input())\n",
    "c = int(input())\n",
    "if a>0 and b>0 and c>0 and a+b>c and a+c>b and b+c>a :\n",
    "    if a==b or a==c or b==c:\n",
    "        print (\"3 cạnh tạo thành một tam giác cân\")\n",
    "    elif a==b==c:\n",
    "        print (\" 3 cạnh tạo thành một tam giác đều\")\n",
    "    else:\n",
    "        print(\" 3 cạnh tạo thành tam giác bình thường\")\n",
    "else:\n",
    "    print(\"không tạo thành tam giác\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "873133ba-3687-49aa-bdb4-89a4173d9551",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "nhập vào số năm: 2070\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "no\n"
     ]
    }
   ],
   "source": [
    "#a12\n",
    "n= int(input(\"nhập vào số năm:\"))\n",
    "if n % 4==0 and n % 100 !=0 or n % 400 ==0:\n",
    "    print (\"yes\")\n",
    "else:\n",
    "    print (\"no\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3ce695d8-1aa7-4459-902c-7df37324b305",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 2 3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "phương trình có nghiệm là: -1.5\n"
     ]
    }
   ],
   "source": [
    "#a13\n",
    "a, b = map(int,input().split())\n",
    "if a == 0:\n",
    "    if b == 0:\n",
    "        print(\"phương trình vô số nghiệm\")\n",
    "    else:\n",
    "        print(\"phương trình vô nghiệm\")\n",
    "else:\n",
    "    x= -b/a\n",
    "    kq= round(x,2)\n",
    "    print(\"phương trình có nghiệm là:\", kq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "14f7c15e-674a-442b-be28-87881cb05886",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "nhập vào điểm của học sinh: 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7.0 khá\n"
     ]
    }
   ],
   "source": [
    "#a14\n",
    "def diem_hoc_luc():\n",
    "    n=float(input(\"nhập vào điểm của học sinh:\"))\n",
    "    if n>10 or n<0:\n",
    "        return'không xác định được'\n",
    "    elif n>=8.0:\n",
    "        print(n,\"giỏi\")\n",
    "    elif n>=6.5:\n",
    "        print(n,\"khá\")\n",
    "    elif n>=5.0:\n",
    "        print(n,\"trung bình\")\n",
    "    elif n<5.0:\n",
    "        print(n,\"yếu\")\n",
    "    else:\n",
    "        print(n,\"khong có kết quả\")\n",
    "diem_hoc_luc ()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "16ebb5cd-4577-449a-8d2f-73476acf99ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Nhập vào một số thực:  2.11111\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 2 2\n"
     ]
    }
   ],
   "source": [
    "#a16\n",
    "a = float(input(\"Nhập vào một số thực: \"))\n",
    "n = int(a)\n",
    "\n",
    "lam_tron_xuong = n if a >= 0 or a == n else n - 1\n",
    "lam_tron_len = n if a <= 0 or a == n else n + 1\n",
    "lam_tron_gan = n + (1 if a - n >= 0.5 else -1 if a - n <= -0.5 else 0)\n",
    "\n",
    "print(lam_tron_len, lam_tron_xuong, lam_tron_gan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b3c10629-ac46-4fca-a32a-c0cdc46db28a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 2 4 8 16\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yes\n"
     ]
    }
   ],
   "source": [
    "#a17\n",
    "a, b, c, d = map(int, input().split())\n",
    "if a and b % a == 0 and c == b*b//a and d == c*b//a:\n",
    "    print(\"yes\")\n",
    "else:\n",
    "    print(\"no\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bfe7c8c-b0ae-4f65-ba13-8718f0a269ab",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
